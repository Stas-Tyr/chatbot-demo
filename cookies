<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chatbot Demo</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            width: 100%;
            height: 100%;
            background-color: #f0f0f0;
        }
        #outer-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            padding: 0;
        }
        #title {
            font-size: 90px;
            margin-bottom: 20px;
            padding-top: 100px;
            text-align: center;
            width: 100%;
        }
        #input-container {
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            text-align: center;
            max-width: 1000px;
            width: calc(100% - 40px);
        }
        #input-container input[type="text"] {
            width: 300px;
            padding: 10px;
            margin-right: 10px;
            border-radius: 5px;
        }
        #input-container button {
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        #input-container button:hover {
            background-color: #0056b3;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.4);
        }
        .modal-content {
            background-color: #fff;
            margin: auto;
            padding: 0;
            width: 100%;
            height: 100%;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            margin: 10px;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="outer-container">
        <div id="title">TRY OUT OUR CHATBOT</div>
        <div id="input-container">
            <label for="websiteUrl">Enter Website URL: </label>
            <input type="text" id="websiteUrl" placeholder="https://example.com">
            <button id="openModalBtn">Open Chatbot</button>
        </div>
    </div>

    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <iframe id="proxy-iframe" src="" style="width: 100%; height: calc(100vh - 40px); border: none;"></iframe>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var iframe = document.getElementById('proxy-iframe');
            var modal = document.getElementById('myModal');
            var btn = document.getElementById('openModalBtn');
            var span = document.getElementsByClassName('close')[0];
            var urlInput = document.getElementById('websiteUrl');

            btn.onclick = function() {
                var url = urlInput.value.trim();
                if (url && isValidUrl(url)) {
                    iframe.src = url;
                    modal.style.display = "block";
                } else {
                    alert("Please enter a valid URL.");
                }
            }

            span.onclick = function() {
                modal.style.display = "none";
            }

            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }

            iframe.onload = function() {
                checkCookieConsent();
            };

            function isValidUrl(string) {
                try {
                    new URL(string);
                    return true;
                } catch (_) {
                    return false;
                }
            }

            function checkCookieConsent() {
                // Check for cookie consent, assuming the consent function is named `hasCookieConsent`
                if (typeof hasCookieConsent === 'function' && hasCookieConsent()) {
                    injectChatbotScript();
                } else {
                    console.log("Waiting for cookie consent...");
                    // Recheck every second until consent is given
                    var consentInterval = setInterval(function() {
                        if (hasCookieConsent()) {
                            clearInterval(consentInterval);
                            injectChatbotScript();
                        }
                    }, 1000);
                }
            }

            function injectChatbotScript() {
                console.log("Cookie consent given, injecting chatbot script...");
                var chatbotScript = document.createElement('script');
                chatbotScript.src = "https://app.aminos.ai/js/chat_plugin_ghl.js";
                chatbotScript.setAttribute('data-bot-id', '19857');
                document.body.appendChild(chatbotScript);
            }
        });
    </script>
</body>
</html>
